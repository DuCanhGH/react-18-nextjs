import Head from "next/head";
import useSWR from "swr";
import { GetServerSideProps } from "next";
import { gsspWithNonceAppliedToCsp } from "@next-safe/middleware/dist/document";
import { axios } from "@/shared";
import { useState } from "react";

const getURL = (pokemon?: string | string[]) => `https://pokeapi.co/api/v2/pokemon/${pokemon}`;

interface Pokemon {
    sprites: {
        front_default: string;
    };
    types: {
        type: {
            name: string;
        };
    }[];
    height: string;
    weight: string;
}

interface PageProps {
    pokemon?: string | string[];
    fallbackData: Pokemon;
}

export const getServerSideProps: GetServerSideProps<PageProps> = gsspWithNonceAppliedToCsp(
    async ({ params }) => {
        const data = await axios.get(getURL(params?.pokemon)).then((res) => res.data);
        return {
            props: {
                fallbackData: data,
                pokemon: params?.pokemon,
            },
        };
    },
);

export default function Home(props: PageProps) {
    const { pokemon, fallbackData } = props;
    const [value, setValue] = useState("");
    const { data } = useSWR<Pokemon>(getURL(pokemon), { fallbackData });
    return (
        <>
            <Head>
                <title>{pokemon ?? "Pokemon"}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div>
                <h2>Pokemon: {pokemon}</h2>
                {data ? (
                    <div>
                        <p>Height: {data.height}</p>
                        <p>Weight: {data.weight}</p>
                        <ul>
                            <li>Types: </li>
                            {data.types.map(({ type }) => (
                                <li key={type.name}>{type.name}</li>
                            ))}
                        </ul>
                    </div>
                ) : (
                    "loading..."
                )}
            </div>
            <label className="block text-gray-700 text-sm font-bold mb-2" htmlFor="password-input">
                Password
            </label>
            <input
                type="password"
                id="password-input"
                className="w-[350px]"
                value={value}
                onChange={(e) => {
                    setValue(e.target.value);
                }}
            />
        </>
    );
}
